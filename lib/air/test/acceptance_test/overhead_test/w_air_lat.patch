diff --git lib/build_ibof_lib.sh lib/build_ibof_lib.sh
index a9c459a1..b2735bc4 100755
--- lib/build_ibof_lib.sh
+++ lib/build_ibof_lib.sh
@@ -195,7 +195,7 @@ build_air(){
     if [ -d "${AIR_SOURCE}" ]; then
         cd ${AIR_SOURCE}
         log_normal "[Build $AIR_SOURCE]"
-        make release
+        make at_lat_ov_test
         ret=$?
         if [ $ret = 0 ]; then
             log_normal "[Build $AIR_SOURCE].. Done"
diff --git lib/spdk-19.10/lib/event/reactor.c lib/spdk-19.10/lib/event/reactor.c
index 6bd0e11b..d22efc4f 100644
--- lib/spdk-19.10/lib/event/reactor.c
+++ lib/spdk-19.10/lib/event/reactor.c
@@ -42,6 +42,7 @@
 #include "spdk/thread.h"
 #include "spdk/env.h"
 #include "spdk/util.h"
+#include "air_c.h"
 
 #ifdef __linux__
 #include <sys/prctl.h>
@@ -350,6 +351,9 @@ _spdk_reactor_run(void *arg)
 	_set_thread_name(thread_name);
 
 	while (1) {
+		AIRLOG_MULTI_LAT_C(OVERHEAD_TEST_NODE_0, 0, 0, 0);
+		AIRLOG_MULTI_LAT_C(OVERHEAD_TEST_NODE_1, 0, 0, 0);
+		AIRLOG_MULTI_LAT_C(OVERHEAD_TEST_NODE_2, 0, 0, 0);
 		uint64_t now;
 		int rc;
 
@@ -358,6 +362,9 @@ _spdk_reactor_run(void *arg)
 		now = spdk_get_ticks();
 
 		_spdk_event_queue_run_batch(reactor);
+		
+		AIRLOG_MULTI_LAT_C(OVERHEAD_TEST_NODE_0, 0, 1, 0);
+		AIRLOG_MULTI_LAT_C(OVERHEAD_TEST_NODE_1, 0, 1, 0);
 
 		TAILQ_FOREACH_SAFE(lw_thread, &reactor->threads, link, tmp) {
 			thread = spdk_thread_get_from_ctx(lw_thread);
@@ -368,6 +375,9 @@ _spdk_reactor_run(void *arg)
 				spdk_thread_destroy(thread);
 			}
 		}
+		
+		AIRLOG_MULTI_LAT_C(OVERHEAD_TEST_NODE_0, 0, 2, 0);
+		AIRLOG_MULTI_LAT_C(OVERHEAD_TEST_NODE_1, 0, 2, 0);
 
 		if (g_reactor_state != SPDK_REACTOR_STATE_RUNNING) {
 			break;
@@ -379,6 +389,10 @@ _spdk_reactor_run(void *arg)
 				last_rusage = now;
 			}
 		}
+
+		AIRLOG_MULTI_LAT_C(OVERHEAD_TEST_NODE_0, 0, 3, 0);
+		AIRLOG_MULTI_LAT_C(OVERHEAD_TEST_NODE_1, 0, 3, 0);
+		AIRLOG_MULTI_LAT_C(OVERHEAD_TEST_NODE_2, 0, 1, 0);
 	}
 
 	TAILQ_FOREACH_SAFE(lw_thread, &reactor->threads, link, tmp) {
diff --git src/cli/main.cpp src/cli/main.cpp
index 984965da..787ad616 100644
--- src/cli/main.cpp
+++ src/cli/main.cpp
@@ -71,7 +71,7 @@ extern "C"{
 extern int optind;        
 int intialize_fio_plugin_bdev()
 { 
-    AIR_INITIALIZE("air.cfg");
+    AIR_INITIALIZE("at_lat_ov_test.cfg");
     AIR_ACTIVATE();
     
     /*optind used in getopt.c of glic needs to be zero, 
@@ -85,7 +85,7 @@ int intialize_fio_plugin_bdev()
 #else
 int main(int argc, char *argv[])
 {
-    AIR_INITIALIZE("air.cfg");
+    AIR_INITIALIZE("at_lat_ov_test.cfg");
     AIR_ACTIVATE();
 
     int retVal = 0;
