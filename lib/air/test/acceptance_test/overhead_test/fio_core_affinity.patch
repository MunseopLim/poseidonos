diff --git src/io/affinity_manager.cpp src/io/affinity_manager.cpp
index 4823dc2c..27bde8dc 100644
--- src/io/affinity_manager.cpp
+++ src/io/affinity_manager.cpp
@@ -16,11 +16,13 @@ const uint32_t AffinityManager::REACTOR_CORE_COUNT = 3;
 const uint32_t AffinityManager::USER_DEVICE_IO_CORE_COUNT = 1;
 const uint32_t AffinityManager::SCHEDULER_CORE_COUNT = 1;
 const uint32_t AffinityManager::GENERAL_CORE_COUNT = 1;
+const uint32_t AffinityManager::FIO_CORE_COUNT = 1;
 const uint32_t AffinityManager::META_IO_CORE_COUNT = 4; // FIXME: scale up according to performance analysis
 const uint32_t AffinityManager::STATIC_CORE_COUNT = REACTOR_CORE_COUNT
                                         + USER_DEVICE_IO_CORE_COUNT
                                         + SCHEDULER_CORE_COUNT
                                         + META_IO_CORE_COUNT
+                                        + FIO_CORE_COUNT
                                         + GENERAL_CORE_COUNT
                                         + KERNEL_DEVICE_IO_CORE_COUNT;
 const uint32_t AffinityManager::MIN_TOTAL_CORE_COUNT = STATIC_CORE_COUNT
@@ -48,6 +50,7 @@ AffinityManager::AffinityManager(void)
             cpuSetArray[CoreType_KernelDeviceIOWorker] = _CalculateCoreSet(startCore, KERNEL_DEVICE_IO_CORE_COUNT);
             cpuSetArray[CoreType_EventScheduler] = _CalculateCoreSet(startCore, SCHEDULER_CORE_COUNT);
             cpuSetArray[CoreType_GeneralUsage] = _CalculateCoreSet(startCore, GENERAL_CORE_COUNT);
+            cpuSetArray[CoreType_FIO] = _CalculateCoreSet(startCore, FIO_CORE_COUNT);
             cpuSetArray[CoreType_EventWorker] = _CalculateCoreSet(startCore, eventCoreCount);
             cpuSetArray[CoreType_MetaIO] = _CalculateCoreSet(startCore, META_IO_CORE_COUNT);
 
@@ -69,6 +72,9 @@ AffinityManager::AffinityManager(void)
             cpuSetArray[CoreType_GeneralUsage] = _CalculateCoreSet(startCore, GENERAL_CORE_COUNT);
 
             startCore += GENERAL_CORE_COUNT;
+            cpuSetArray[CoreType_FIO] = _CalculateCoreSet(startCore, FIO_CORE_COUNT);
+            
+            startCore += FIO_CORE_COUNT;
             cpuSetArray[CoreType_EventWorker] = _CalculateCoreSet(startCore, eventCoreCount);
 
             startCore += eventCoreCount;
@@ -221,6 +227,11 @@ AffinityManager::GetGeneralCPUSet(void)
     return cpuSetArray[CoreType_GeneralUsage];
 }
 
+cpu_set_t
+AffinityManager::GetFIOCPUSet(void)
+{
+    return cpuSetArray[CoreType_FIO];
+}
 
 uint32_t
 AffinityManager::GetMetaIOCoreCnt(void)
diff --git src/io/affinity_manager.h src/io/affinity_manager.h
index 29774f35..788842c0 100644
--- src/io/affinity_manager.h
+++ src/io/affinity_manager.h
@@ -24,6 +24,7 @@ public:
     cpu_set_t GetSchedulerCPUSet(void);
     cpu_set_t GetEventCPUSet(void);
     cpu_set_t GetGeneralCPUSet(void);
+    cpu_set_t GetFIOCPUSet(void);
     cpu_set_t GetMetaIOCPUSet(void);
     cpu_set_t GetReactorCPUSet(void);
 
@@ -39,6 +40,7 @@ private:
         CoreType_EventScheduler,
         CoreType_EventWorker,
         CoreType_GeneralUsage,
+        CoreType_FIO,
         CoreType_MetaIO,
 
         CoreType_End,
@@ -51,6 +53,7 @@ private:
     static const uint32_t USER_DEVICE_IO_CORE_COUNT;
     static const uint32_t SCHEDULER_CORE_COUNT;
     static const uint32_t GENERAL_CORE_COUNT;
+    static const uint32_t FIO_CORE_COUNT;
     static const uint32_t META_IO_CORE_COUNT;
     static const uint32_t STATIC_CORE_COUNT;
     static const uint32_t MIN_TOTAL_CORE_COUNT;
