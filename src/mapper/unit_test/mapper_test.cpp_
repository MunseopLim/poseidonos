namespace pos
{

TEST_F(MapperTest, LinkReverseMap)
{
    POS_TRACE_INFO(9999, "******************** MapperTest.LinkReverseMap ********************");
    int reti = 0;
    Stripe stripe;

    reti = mapperSUT->LinkReverseMap(&stripe, 0, 0);
    EXPECT_EQ(reti, RET_INT_SUCCESS);
}

TEST_F(MapperTest, CheckLoadAndGetHeader)
{
    POS_TRACE_INFO(9999, "******************** MapperTest.CheckLoadAndGetHeader ********************");
    bool retb = true;
    int reti = 0;

    retb = _IsVSAMapLoaded(TEST_VOL_ID);
    EXPECT_NE(retb, RET_BOOL_SUCCESS);

    _CreateVolume(0);
    retb = _IsVSAMapLoaded(TEST_VOL_ID);
    EXPECT_EQ(retb, RET_BOOL_SUCCESS);

    _MountVolume(0);
    _UnmountVolume(0);
    uint64_t volSizeByte = 0;
    reti = _GetVolSizeByLoadHeader(TEST_VOL_ID, volSizeByte);
    EXPECT_EQ(reti, RET_INT_SUCCESS);

    uint64_t totalBlksLoaded = DivideUp(volSizeByte, PAGE_SIZE);
    uint64_t totalBlks = DivideUp(createdVolumeInfo[0], PAGE_SIZE);
    EXPECT_EQ(totalBlksLoaded, totalBlks);
}

} // namespace pos
