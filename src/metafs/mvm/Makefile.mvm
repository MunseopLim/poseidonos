include $(MFS_TOP_DIR)/mvm/Makefile.include

UT_MVM_EN := 0
MOCK_MVM_EN := 0
FAKE_MVM_EN := 0
STUB_MVM_EN := 0

ifeq ($(MFS_INTEGRATION_TEST_EN),1)
else
ifeq ($(ut),mvm)
$(info Meta filesystem unit test option enabled - for "MVM block" ...)
MFS_INTEGRATION_TEST_EN = 0
UT_MVM_EN = 1
else ifeq ($(ut),)
else
MOCK_MVM_EN = 1
endif
endif # MFS_INTEGRATION_TEST_EN
########################################

MVM_SRCS += \
	mfs_mvm_top.cpp \
	mf_inode.cpp \

ifeq ($(MOCK_MVM_EN), 1)

MFS_INCLUDE_PATH += \
	mvm/mock \

MVM_SRCS += \
	mvm_top_mock.cpp

else
MVM_SRCS += \
	meta_vol_base.cpp \
	ssd_meta_vol.cpp \
	nvram_meta_vol.cpp \
	meta_vol_container.cpp \
	meta_vol_context.cpp \
	meta_vol_mgr.cpp \
	mf_inode_mgr.cpp \
	meta_fd_mgr.cpp \
	meta_file_mgr.cpp \
	meta_vol_catalog.cpp \
	meta_vol_catalog_mgr.cpp \
	mf_extent.cpp \
	mf_extent_mgr.cpp \
	mf_inode_hdr.cpp \
	mf_inode_table.cpp \
	on_volume_meta_region_mgr.cpp \

ifeq ($(COMPACTION_EN), 1)
MVM_SRCS += \
	region.cpp \
	region_deque.cpp \

endif

endif

ifeq ($(UT_MVM_EN), 1)
UT_PATH += \
	mvm/unit_test \

endif

ifeq ($(UT_MVM_EN), 1)
UT_SRCS += \
	mvm_test.cpp \
	mvm_func_positive_test.cpp \
	mvm_func_negative_test.cpp \

endif

SRCS += $(MVM_SRCS)

DEFINE += "-DMFS_MOCK_MVM_EN=$(MOCK_MVM_EN)"
